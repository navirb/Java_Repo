In SQL, joins are used to combine rows from two or more tables based on a related column between them. Joins allow you to retrieve data from multiple tables in a single query and establish relationships between them. Here are the commonly used join types:

1. Inner Join:
   - Returns only the rows that have matching values in both tables.
   - Syntax:
     ```sql
     SELECT columns
     FROM table1
     INNER JOIN table2 ON table1.column = table2.column;
     ```

2. Left Join (or Left Outer Join):
   - Returns all rows from the left table and the matching rows from the right table.
   - If there is no match, the result will contain NULL values for the columns of the right table.
   - Syntax:
     ```sql
     SELECT columns
     FROM table1
     LEFT JOIN table2 ON table1.column = table2.column;
     ```

3. Right Join (or Right Outer Join):
   - Returns all rows from the right table and the matching rows from the left table.
   - If there is no match, the result will contain NULL values for the columns of the left table.
   - Syntax:
     ```sql
     SELECT columns
     FROM table1
     RIGHT JOIN table2 ON table1.column = table2.column;
     ```

4. Full Join (or Full Outer Join):
   - Returns all rows from both tables and includes NULL values where there is no match.
   - Syntax:
     ```sql
     SELECT columns
     FROM table1
     FULL JOIN table2 ON table1.column = table2.column;
     ```

5. Cross Join (or Cartesian Join):
   - Returns the Cartesian product of both tables, which means every row in the first table is combined with every row in the second table.
   - Syntax:
     ```sql
     SELECT columns
     FROM table1
     CROSS JOIN table2;
     ```

These are the basic join types in SQL. Depending on your requirements, you can choose the appropriate join type to retrieve the desired data from multiple tables.